<ul class="ratingW float-right row">
  <% Settings.MAX_RATING.times do |i| %>
    <li>
      <a>
          <div class="star" onclick="handle_set_rating(<%=i+1%>)">
          </div>
      </a>
    </li>
  <% end %>
</ul>
<%= form_for @field_type, url: reviews_path, method: :post, data: { turbo_stream: true } do %>
  <input id="selected" name="field_type_id" type="hidden" value="<%= @field_type.id %>"/>
  <input id="rating" name="rating" type="hidden" value="5"/>
  <input id="selected" name="field_type_id" type="hidden" value="<%= @field_type.id %>"/>
  <label for="exampleFormControlTextarea1"></label>
  <div>
    <textarea class="form-control text-white border-success" id="review-input" rows="3" name="content">
  </textarea>
    <div class="load-wrapp d-none">
      <div class="load-3">
        <div class="line"></div>
        <div class="line"></div>
        <div class="line"></div>
      </div>
    </div>
  </div>
  <button type="submit" class="btn btn-success my-3 float-right" id="create-review"><%= t("button.reviews") %></button>
<% end %>
<script>
    function handle_set_rating(rating) {
      const rating_element = document.querySelector("#rating")
      rating_element.value = rating
    }
    setTimeout(() => {
        const create_review_btn = document.querySelector("#create-review")
        const review_container = document.querySelector("#review");
        const review_input = document.querySelector("#review-input");
        review_input.value = ""
        create_review_btn.style.display = "none"
        
        create_review_btn.addEventListener("click", () => {
            if(!review_input.value) {
                alert("Content not be empty !")
            }
            else {
                setTimeout(() => {
                    review_container.scrollTop = review_container.scrollHeight
                }, 500)
            }
        })

        const spinner = document.querySelector(".load-wrapp")
        review_input.addEventListener("keyup", function (event) {
            const {value} = event.target
            if (value.length > 0) {

                create_review_btn.style.display = "block"
                spinner.classList.remove("d-block")
                spinner.classList.add("d-block")
            } else {
                spinner.classList.add("d-block")
                spinner.classList.remove("d-block")
                create_review_btn.style.display = "none"
            }
        })
    }, 100)

    function ratingStar(star) {
        star.click(function () {
            var stars = $('.ratingW').find('li')
            stars.removeClass('on');
            var thisIndex = $(this).parents('li').index();
            for (var i = 0; i <= thisIndex; i++) {
                stars.eq(i).addClass('on');
            }
            putScoreNow(thisIndex + 1);
        });
    }

    function putScoreNow(i) {
        $('.scoreNow').html(i);
    }


    $(function () {
        if ($('.ratingW').length > 0) {
            ratingStar($('.ratingW li a'));
        }
    });

</script>
